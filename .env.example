# ===============================================
# LADBOT ENHANCED - ENVIRONMENT CONFIGURATION
# Copy this file to .env and fill in your values
# ===============================================

# ===== DISCORD BOT CONFIGURATION =====
# Required: Your Discord bot token from https://discord.com/developers/applications
BOT_TOKEN=your_discord_bot_token_here

# Bot command prefix (default: l.)
BOT_PREFIX=l.

# ===== DISCORD OAUTH (WEB DASHBOARD) =====
# Required for web dashboard login functionality
# Get these from your Discord application's OAuth2 section

# Your Discord application ID
DISCORD_CLIENT_ID=your_discord_application_id

# Your Discord application client secret
DISCORD_CLIENT_SECRET=your_discord_client_secret

# OAuth redirect URI - must match what's configured in Discord
# Local development:
DISCORD_REDIRECT_URI=http://localhost:8080/callback
# Production (update with your domain):
# DISCORD_REDIRECT_URI=https://your-domain.com/callback

# ===== ADMIN CONFIGURATION =====
# Discord user IDs who have admin access (comma-separated)
# To get your Discord ID: Enable Developer Mode in Discord settings,
# then right-click your username and select "Copy User ID"
ADMIN_IDS=your_discord_user_id,another_admin_user_id

# ===== WEB DASHBOARD SETTINGS =====
# Secret key for web session security (generate a random string)
# You can generate one at: https://djecrety.ir/ or use: python -c "import secrets; print(secrets.token_hex(32))"
WEB_SECRET_KEY=your-super-secret-key-here-make-it-long-and-random

# Web server port (default: 8080, will be overridden by hosting platforms)
PORT=8080

# ===== ENVIRONMENT SETTINGS =====
# Environment type: development, production
ENVIRONMENT=development

# Enable debug mode (true/false) - should be false in production
DEBUG=true

# Logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# ===== OPTIONAL API INTEGRATIONS =====

# OpenWeatherMap API for weather commands
# Get free API key at: https://openweathermap.org/api
# Provides 1000 calls/day on free tier
OPENWEATHER_API_KEY=your_openweather_api_key

# CoinGecko API for cryptocurrency commands (optional, has free tier)
# COINGECKO_API_KEY=your_coingecko_api_key

# Reddit API for Reddit commands (optional)
# Get credentials at: https://www.reddit.com/prefs/apps
# REDDIT_CLIENT_ID=your_reddit_client_id
# REDDIT_CLIENT_SECRET=your_reddit_client_secret
# REDDIT_USER_AGENT=Ladbot/1.0

# ===== DATABASE CONFIGURATION (FUTURE) =====
# Currently using file-based storage, but ready for database upgrade

# SQLite (default - no configuration needed)
# DATABASE_URL=sqlite:///data/ladbot.db

# PostgreSQL (for production scaling)
# DATABASE_URL=postgresql://username:password@localhost/ladbot

# MongoDB (alternative option)
# MONGODB_URI=mongodb://localhost:27017/ladbot

# ===== EXTERNAL SERVICE APIS (OPTIONAL) =====

# GitHub API for repository integration (optional)
# GITHUB_TOKEN=your_github_personal_access_token

# Spotify API for music-related commands (optional)
# SPOTIFY_CLIENT_ID=your_spotify_client_id
# SPOTIFY_CLIENT_SECRET=your_spotify_client_secret

# YouTube API for video commands (optional)
# YOUTUBE_API_KEY=your_youtube_api_key

# ===== DEPLOYMENT PLATFORM SETTINGS =====
# These are usually set automatically by hosting platforms

# Railway deployment
# RAILWAY_ENVIRONMENT=production
# RAILWAY_PROJECT_ID=your-project-id

# Render deployment
# RENDER=true
# RENDER_EXTERNAL_URL=https://your-app.onrender.com

# Heroku deployment
# HEROKU_APP_NAME=your-app-name
# DYNO=web.1

# ===== ADVANCED CONFIGURATION =====

# Rate limiting settings
RATE_LIMIT_ENABLED=true
RATE_LIMIT_PER_MINUTE=60

# Cache settings
CACHE_ENABLED=true
CACHE_TTL=3600

# Session timeout (in seconds, default: 7 days)
SESSION_TIMEOUT=604800

# Maximum file upload size for web dashboard (in MB)
MAX_UPLOAD_SIZE=16

# ===== FEATURE FLAGS =====
# Enable/disable specific bot features

# Weather commands
WEATHER_ENABLED=true

# Cryptocurrency commands
CRYPTO_ENABLED=true

# Reddit integration
REDDIT_ENABLED=false

# Game commands
GAMES_ENABLED=true

# AI/ML features (future)
AI_FEATURES_ENABLED=false

# ===== MONITORING & ANALYTICS =====

# Error reporting service (optional)
# SENTRY_DSN=your_sentry_dsn_here

# Analytics service (optional)
# ANALYTICS_ENABLED=false
# GOOGLE_ANALYTICS_ID=your_ga_id

# Performance monitoring
PERFORMANCE_MONITORING=true

# ===== SECURITY SETTINGS =====

# Enable HTTPS redirect in production
FORCE_HTTPS=false

# Content Security Policy
CSP_ENABLED=true

# CORS origins (comma-separated URLs, * for all)
CORS_ORIGINS=*

# Session cookie security
SECURE_COOKIES=false

# ===== BACKUP & MAINTENANCE =====

# Automatic backup settings
AUTO_BACKUP_ENABLED=true
BACKUP_INTERVAL_HOURS=24
BACKUP_RETENTION_DAYS=30

# Maintenance mode
MAINTENANCE_MODE=false
MAINTENANCE_MESSAGE=Ladbot is currently under maintenance. Please check back soon!

# ===== DEVELOPMENT SETTINGS =====
# Only used in development environment

# Enable Flask debug toolbar
FLASK_DEBUG_TOOLBAR=false

# Enable detailed SQL logging
SQL_DEBUG=false

# Enable request logging
REQUEST_LOGGING=true

# Hot reload for development
HOT_RELOAD=true

# ===============================================
# SETUP INSTRUCTIONS:
#
# 1. Copy this file to .env:
#    cp .env.example .env
#
# 2. Edit .env with your actual values:
#    nano .env  # or use your preferred editor
#
# 3. Discord Bot Setup:
#    - Go to https://discord.com/developers/applications
#    - Create a new application or select existing
#    - Go to "Bot" section and copy the token
#    - Paste token as BOT_TOKEN value
#
# 4. Discord OAuth Setup (for web dashboard):
#    - In the same application, go to "OAuth2" > "General"
#    - Copy Client ID and Client Secret
#    - Add redirect URI: http://localhost:8080/callback (for local)
#    - For production, use your domain: https://yourdomain.com/callback
#
# 5. Admin Setup:
#    - Enable Developer Mode in Discord settings
#    - Right-click your username and "Copy User ID"
#    - Add your user ID to ADMIN_IDS
#
# 6. Generate Secret Key:
#    - Run: python -c "import secrets; print(secrets.token_hex(32))"
#    - Copy output to WEB_SECRET_KEY
#
# 7. Optional APIs:
#    - Sign up for OpenWeatherMap API (free tier available)
#    - Add other API keys as needed
#
# ===============================================
# SECURITY NOTES:
#
# - Never commit .env file to version control
# - Keep your bot token secret and secure
# - Use strong, random secret keys
# - In production, set DEBUG=false
# - Use HTTPS in production (FORCE_HTTPS=true)
# - Regularly rotate API keys and tokens
# - Monitor your bot for unusual activity
#
# ===============================================
# TROUBLESHOOTING:
#
# Common issues:
# - Bot won't start: Check BOT_TOKEN is correct
# - OAuth not working: Verify DISCORD_CLIENT_ID/SECRET and redirect URI
# - 404 errors: Check DISCORD_REDIRECT_URI matches Discord settings
# - Permission errors: Ensure ADMIN_IDS contains your Discord user ID
# - Weather not working: Check OPENWEATHER_API_KEY is valid
#
# ===============================================
# QUICK START EXAMPLE:
#
# Minimum required variables for basic functionality:
# BOT_TOKEN=YOUR_ACTUAL_BOT_TOKEN
# BOT_PREFIX=l.
# ADMIN_IDS=YOUR_DISCORD_USER_ID
# WEB_SECRET_KEY=GENERATED_SECRET_KEY
# ENVIRONMENT=development
# DEBUG=true
# LOG_LEVEL=INFO
#
# ===============================================s